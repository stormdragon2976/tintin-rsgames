#ACTION {^+KEYBIND {ALT|CONTROL}+F{1|2|3|4|5|6|7|8|9|10|11|12}|%3|%4}
{
	#switch {"%1"}
	{
		#nop {output is assigned to the number, because for control+f sequences we have to assign them to alt+shift+number instead of control+number.};
		#case {"ALT"}
		{
			#macro {\e%2} {%3};
			#variable {output} {%2}
		};
		#case {"CONTROL"}
		{
			#variable {output} {%2};
			#replace {output} {12} {+};
			#replace {output} {11} {_};
			#replace {output} {10} {)};
			#replace {output} {9} {(};
			#replace {output} {8} {*};
			#replace {output} {7} {&};
			#replace {output} {6} {^};
			#replace {output} {5} {%};
			#replace {output} {4} {$};
			#replace {output} {3} {#};
			#replace {output} {2} {@};
			#replace {output} {1} {!};
			#macro {\e$output} {%3}
		}
	};
	#if {"${oldKeys.ALT+$output} != "%3"}
	{
		#echo {(ALT+$output) %4};
		#variable {oldKeys.ALT+$output} {%3}
	};
	#line {gag}
}
{7}

#ACTION {^+KEYBIND F{1|2|3|4|5|6|7|8|9|10|11|12}|%2|%3}
{
	#switch {"F%1"}
	{
		#case {"F1"}
		{
			#macro {\eOP} {%2}
		};
		#case {"F2"}
		{
			#macro {\eOQ} {%2}
		};
		#case {"F3"}
		{
			#macro {\eOR} {%2}
		};
		#case {"F4"}
		{
			#macro {\eOS} {%2}
		};
		#case {"F5"}
		{
			#macro {\e[15~} {%2}
		};
		#case {"F6"}
		{
			#macro {\e[17~} {%2}
		};
		#case {"F7"}
		{
			#macro {\e[18~} {%2}
		};
		#case {"F8"}
		{
			#macro {\e[19~} {%2}
		};
		#case {"F9"}
		{
			#macro {\e[20~} {%2}
		};
		#case {"F10"}
		{
			#macro {\e[21~} {%2}
		};
		#case {"F11"}
		{
			#macro {\e[23~} {%2}
		};
		#case {"F12"}
		{
			#macro {\e[24~} {%2}
		}
	};
	#if {"${oldKeys.F%1} != "%2"}
	{
		#echo {(F%1) %3};
		#variable {oldKeys.F%1} {%2}
	};
	#line {gag}
}
{8}

#ACTION {^+KEYBIND RETURN|%1|%2}
{
	#line {gag};
	#echo {(start) %2};
	#history {insert} {%1}
}
{8}

#ACTION {^+%*Please check which die you would like to re-roll. Check none to keep all.$}
{
	#list {menu} {find} {none} {i};
	#if {$i == 0}
	{
		#list {menu} {add} {none}
	}
}
{9}

#ACTION {^+%1 transcript of this game %2}
{
	#if {"${auto.reject}" == "true"}
	{
		#send {no}
	}
}
{9}

#ACTION {^+%w You don't have any playable cards.$}
{
	#if {"${auto.draw}" == "true"}
	{
		#send {Draw card}
	}
}
{9}

#ACTION {^+CONFIG-READ config.ini|uuids$}
{
	#script {if [ -f "$HOME/config.tin" ]; then echo "#class {settings} {read} {$HOME/config.tin}";fi};
	#class {settings} {open};
	#list {uuids} {size} {i};
	#if {$i > 0}
	{
		#variable {output} {};
		#forall {${uuids[%*]}}{#variable {output} {${output}&0,}};
		#send {$output}
	};
	#else
	{
		#cr
	};
	#class {settings} {close}
}
{9}

#ACTION {^+CONFIG-WRITE config.ini|uuids|$}
{
	#list {uuids} {clear};
	#class {settings} {write} {$HOME/config.tin}
}
{9}

#ACTION {^+CONFIG-WRITE config.ini|uuids|,%S}
{
	#list {uuids} {find} {%1} {i};
	#if {$i == 0}
	{
		#list {uuids} {add} {%1};
		#class {settings} {write} {$HOME/config.tin}
	}
}
{9}

#ACTION {^+GAMENAME %1}
{
	#variable {game.name} {%1};
	#system {if [ ! -d "$HOME/sounds/%1" ]; then mkdir -p "$HOME/sounds/%1";fi}
}
{9}

#ACTION {^+KEYBIND %1|%2|%3}
{
	#line {gag};
	#switch {"%1"}
	{
		#case {"%?"}
		{
			#format {output} {%l} {%1};
			#macro {\e$output} {%2}
		};
		#case {"CONTROL+%?"}
		{
			#format {output} {%l} {%1};
			#replace {output} {control+} {};
			#macro {\c$output} {%2}
		};
		#case {"ALT+%?"}
		{
			#variable {output} {%1};
			#replace {output} {%*+} {};
			#macro {\e$output} {%2}
		};
		#default
		{
			#if {"$debug" == "true"}
			{
				#echo {%0}
			};
			#break
		}
	};
	#if {"${oldKeys.%1}" != "%2"}
	{
		#regexp {%1} {{.*}+{.*}} {#echo {(%1) %3}};
		#else
		{
			#echo {(ALT+%1) %3}
		};
		#variable {oldKeys.%1} {%2}
	};
	#if {"${auto.start}" == "true" && "%2" == "postpone"}
	{
		#send {postpone};
		#send {startgame}
	}
}
{9}

#ACTION {^+MSG Please select an option.$}
{
	#list {menu} {clear}
}
{9}

#ACTION {^+OK Please provide version verification in order to continue$}
{
	#send {cversion rs games client|${rsGamesVersionNumber}};
	#line {gag};
	#cr
}
{9}

#ACTION {^+SND-CHECK {No|Yes}|%2|http://zanosoft.net/zgp/snd-download/?game=%3|http://zanosoft.net/zgp/snd-download$}
{
	#variable {game.name} {%2};
	#system {if [ ! -d "$HOME/sounds/%2" ]; then mkdir -p "$HOME/sounds/%2";fi}
}
{9}

#ACTION {^+SND-{PLAY|WAIT} %S.%w$}
{
	#variable {lastSound} {%2.%3};
	#line {gag};
	#switch {"%2.%3"}
	{
		#case {"Drawcard.ogg"}
		{
			#variable {output} {Drawcard.ogg}
		};
		#case {"House1.ogg"}
		{
			#variable {output} {House1.ogg}
		};
		#case {"House2.ogg"}
		{
			#variable {output} {House2.ogg}
		};
		#case {"Gotojail.ogg"}
		{
			#variable {output} {Gotojail.ogg}
		};
		#case {"shake.ogg"}
		{
			#variable {output} {Shake.ogg}
		};
		#default
		{
			#format {output} {%l} {%2.%3}
		}
	};
	#script {if [ ! -f "$HOME/sounds/${game.name}/$output" ]; then sox -q "http://zanosoft.net/zgp/snd-download/${game.name}/$output" "$HOME/sounds/${game.name}/$output";fi};
	PLAY $output
}
{9}

#ACTION {^+WEBBROWSER %S$}
{
	#line {gag};
	#if {"$GUI" == "true"}
	{
		#system {xdg-open '%1' &> /dev/null &}
	};
	#else
	{
		#system {echo "%1" | tee /tmp/fenrirClipboard}
	}
}
{9}

#ACTION {^+{CHECKLIST|CHOICE} %*}
{
	#list {menu} {clear};
	#variable {text} {%2};
	#replace {text} {|} {;};
	#list {menu} {add} {$text};
	#variable {i} {1};
	#list {menu} {size} {menuSize};
	#while {$i <= $menuSize}
	{
		#variable {output} {$i: ${menu[$i]}};
		#nop {Lots of formating output for playability, and add color for visual users.};
		#replace {output} {playable%*.ogg~} {(playable) };
		#replace {output} {{Blue draw two|Blue reverse|Blue skip|Blue \d+|Blue}} {<049>&0<099>};
		#replace {output} {{Green draw two|Green light|Green reverse|Green skip|Green \d+|Green}} {<029>&0<099>};
		#replace {output} {{Red draw two|Red light|Red reverse|Red skip|Red \d+|Red}} {<019>&0<099>};
		#replace {output} {{Yellow draw two|Yellow reverse|Yellow skip|Yellow \d+|Yellow}} {<039>&0<099>};
		#replace {output} {Wild} {<019>W<029>i<039>l<019>d<099>};
		#replace {output} {Wild draw four} {<019>W<029>i<039>l<019>d<099> <029>d<039>r<019>a<029>w<099> <039>f<019>o<029>u<039>r<099>};
		#echo {$output};
		#if {"%1" == "CHECKLIST"}
		{
			#math {menu[$i]} {$i - 1};
			#variable {menu[$i]} {${menu[$i]},}
		};
		#math {i} {$i + 1}
	};
	#line {gag};
	#nop {Press enter for the first choice};
	#history {insert} {#send {${menu[1]}}}
}
{9}

#ACTION {^I couldn't understand that.$}
{
	#variable {i} {1};
	#while {$i <= $menuSize}
	{
		#variable {output} {$i: ${menu[$i]}};
		#replace {output} {playable%*.ogg~} {(playable) };
		#echo {$output};
		#math {i} {$i + 1}
	};
	#nop {Press enter for the first choice};
	#history {insert} {#send {${menu[1]}}}
}
{9}

#ALIAS {^/plugin %s{disable|enable} %s{([\w-_])*}$}
{
	#if {"%2" == "enable"}
	{
		#script {if [ -h "plugins-enabled/%4.tin" ]; then echo "#echo {Plugin '%4' is already enabled.}";elif [ ! -e "plugins/%4.tin" ]; then echo "#echo {Plugin '%4' not found.}";else if [ ! -d "plugins-enabled" ]; then mkdir "plugins-enabled";fi;ln -s "$(readlink -f $0 | sed -e 's/\/sh$//')/plugins/%4.tin" "$(readlink -f $0 | sed -e 's/\/sh$//')/plugins-enabled/%4.tin";echo "#class {%4} {read} {plugins-enabled/%4.tin};#echo {Plugin '%4' enabled.}";fi}
	};
	#else
	{
		#script {if [ ! -h "plugins-enabled/%4.tin" ]; then echo "#echo {Plugin '%4' is not enabled.}";else unlink "plugins-enabled/%4.tin";rmdir "plugins-enabled" 2> /dev/null;echo "#class {%4} {kill};#echo {Plugin '%4' disabled.}";fi}
	}
}
{8}

#ALIAS {^/plugin %slist$}
{
	#system {echo "Available plugins:";for x in plugins/*.tin ; do basename "$x" ".tin";done}
}
{9}

#ALIAS {^PLAY %1}
{
	#system {play -qV0 "$HOME/sounds/${game.name}/%1"&}
}
{9}

#ALIAS {^history$}
{
	#forall {${game.inputHistory[%*]}}{#echo {&0}}
}
{9}

#ALIAS {^start$}
{
	#send {startgame}
}
{9}

#ALIAS {^{\d+([, -]\d+)*}$}
{
	#nop {Set options to blank.};
	#variable {options} {};
	#nop {Store the numbers separated by spaces or comma in $i. Replace , and space with ;};
	#variable {i} {%0};
	#nop {make numbers separated by - into ranges, so you can do a-3,4,7-9 for example.};
	#variable {continue} {0};
	#while {$continue == 0}
	{
		#regexp {$i} {{\d+}-{\d+}} {#replace {i} {&0{\s*|,*}} {};#loop {&1} {&2} {l} {#variable {i} {${i}$l,}}};
		#else
		{
			#variable {continue} {1}
		}
	};
	#replace {i} {,} {;};
	#replace {i} { } {;};
	#nop {Go through all the options selected by $i};
	#forall {$i}{#nop {If the selected number is in the menus index, add it to the output string.};#if {&{menu[&0]}}{#nop {Output sent to the game must be in lower case.};#format {output} {%l} {${menu[&0]}};#nop {Remove the playable file.ogg from the selection, or the option won't be recognized.};#replace {output} {.*~} {};#nop {options contains all the selected numbers to be passed. This could be one option for a menu, or several for a checklist.};#variable {options} {${options}${output}}};#else {#nop {the option wasn't in the menu, so just pass to the game and hope for the best.};#variable {options} {${options}&0}}};
	#nop {pass all selected  options to the game.};
	#send {$options}
}
{9}

#ALIAS {^{noauto|auto}{draw|reject|start}$}
{
	#class {settings} {open};
	#if {"%1" == "auto"}
	{
		#variable {auto.%2} {true};
		#echo {auto%2 enabled.}
	};
	#else
	{
		#variable {auto.%2} {false};
		#echo {auto%2 disabled.}
	};
	#class {settings} {write} {$HOME/config.tin};
	#class {settings} {close}
}
{9}

#ALIAS {^{y|n}$}
{
	#if {"%0" == "y"}
	{
		#send {yes}
	};
	#else
	{
		#send {no}
	}
}
{9}

#CONFIG           {256 COLORS}  {OFF}
#CONFIG           {AUTO TAB}  {5000}
#CONFIG           {BUFFER SIZE}  {20000}
#CONFIG           {CHARSET}  {ASCII}
#CONFIG           {COLOR PATCH}  {OFF}
#CONFIG           {COMMAND COLOR}  {<078>}
#CONFIG           {COMMAND ECHO}  {OFF}
#CONFIG           {CONNECT RETRY}  {0}
#CONFIG           {HISTORY SIZE}  {1000}
#CONFIG           {LOG}  {RAW}
#CONFIG           {PACKET PATCH}  {0.00}
#CONFIG           {REPEAT CHAR}  {!}
#CONFIG           {REPEAT ENTER}  {ON}
#CONFIG           {SCROLL LOCK}  {ON}
#CONFIG           {SPEEDWALK}  {OFF}
#CONFIG           {TINTIN CHAR}  {#}
#CONFIG           {VERBATIM}  {OFF}
#CONFIG           {VERBATIM CHAR}  {\}
#CONFIG           {VERBOSE}  {OFF}
#CONFIG           {WORDWRAP}  {ON}
#EVENT {RECEIVED INPUT}
{
	#list {game.inputHistory} {add} {%0}
}

#EVENT {SESSION CONNECTED}
{
	#nop {Set the home directory variable.};
	#script {HOME} {if [ -z "$XDG_CONFIG_HOME" ] ; then if ! [ -d "$HOME/.config/tintin-rsgames/" ] ; then mkdir -p "$HOME/.config/tintin-rsgames";fi;echo -n "$HOME/.config/tintin-rsgames";else if ! [ -d "$XDG_CONFIG_HOME/tintin-rsgames/" ] ; then mkdir -p "$XDG_CONFIG_HOME/tintin-rsgames/";fi;echo -n "$XDG_CONFIG_HOME/tintin-rsgames";fi};
	#variable {HOME} {${HOME[1]}};
	#replace {HOME} {-n } {};
	#system {if [ ! -d "$HOME/sounds" ]; then mkdir -p "$HOME/sounds";fi};
	#nop {Load plugins, if any.};
	#script {if [ -d "plugins-enabled" ]; then for i in plugins-enabled/*.tin ; do echo "#class {$(basename "$i" ".tin")} {read} {$i}";done;fi};
	#nop {Find out if we have a display or not};
	#script {GUI} {if [ -n "$DISPLAY" ]; then echo "true";else echo "false";fi};
	#variable {GUI} {${GUI[1]}}
}

#EVENT {SESSION DISCONNECTED}
{
	#end
}

#GAG              {^+%*We have just launched a new voice chat feature%*}
#GAG              {^+KEYBIND%*Voice%*}
#GAG              {^+OK rsgames.org Zano Game Protocol Server %*}
#GAG              {^+SND-{C|D|S}%*}
#GAG              {^+{CASH .*|CLEARKEYBINDING|CONFIG-.*|GETCASH .*|INGAME|KILLCHOICE|LOGGEDIN|NOGAME|OK|PTURNOVER|VC-DISCONNECT}$}
#PATHDIR          {d}  {u}  {32}
#PATHDIR          {e}  {w}  {2}
#PATHDIR          {n}  {s}  {1}
#PATHDIR          {ne}  {sw}  {3}
#PATHDIR          {nw}  {se}  {9}
#PATHDIR          {s}  {n}  {4}
#PATHDIR          {se}  {nw}  {6}
#PATHDIR          {sw}  {ne}  {12}
#PATHDIR          {u}  {d}  {16}
#PATHDIR          {w}  {e}  {8}
#SESSION {RS Games} {game.rsgames.org} {3555} 
#SUBSTITUTE       {I{t is|t's still} your turn.}     {<599>%0<099>}   {1}
#SUBSTITUTE       {Blue}  {<049>Blue<099>}  {1}
#SUBSTITUTE       {Green}  {<029>Green<099>}  {1}
#SUBSTITUTE       {Red}  {<019>Red<099>}  {1}
#SUBSTITUTE       {Yell{o|ow}}  {<039>Yellow<099>}  {1}
#SUBSTITUTE       {^+CHAT %S|%2}  {%1: '%2'}  {9}
#SUBSTITUTE       {+MSG %1Alt+F%d %3}  {%1 ALT+%2 %3}  {9}
#SUBSTITUTE       {+MSG %1Control+F%d %3}   {%1 ALT+SHIFT+%2 %3}  {9}
#SUBSTITUTE       {^+MSG You can't play that card. Would you like to discard it?$}                                            {You can't play ${menu[$i]}\. would you like to discard it?}                                   {8}
#SUBSTITUTE       {^{\+|-}{ERR|GAMENAME|INPUT|MSG|MSGI} }                   {<099>}  {9}
#VARIABLE         {debug}  {false}
#VARIABLE         {game}  {{inputHistory}{{1}{#write rs.tin}{2}{#write rs.tin}}}
#VARIABLE         {i}  {}
#VARIABLE         {lastSound}  {}
#VARIABLE         {menu}  {}
#VARIABLE         {menuSize}  {}
#VARIABLE         {options}  {}
#VARIABLE         {output}  {}
#VARIABLE         {rsGamesVersionNumber}  {2.01}
#VARIABLE         {text}  {}
